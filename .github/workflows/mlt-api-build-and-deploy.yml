name: Mlt.Api Build & Deploy

on:
  push:
    branches:
      - 'feature/**'
      - 'main'
    paths:
      - 'mlt.api/**'
      - 'mlt.common/**'
      - 'mlt.realdebrid/**'
      - 'mlt.rss/**'
      - 'mlt.synology/**'
      - 'mlt.workflow/**'
      - '.github/workflows/mlt-api-build-and-deploy.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine Docker tag and webhook
        id: tag
        run: |
          if [[ '${{ github.ref }}' == 'refs/heads/main' ]]; then
            echo "TAG=latest" >> $GITHUB_ENV
            if [ -z "${{ secrets.PROD_MLT_API_WEBHOOK }}" ]; then
              echo "WEBHOOK=''" >> $GITHUB_ENV
              echo "Warning: PROD_MLT_API_WEBHOOK secret is not set."
            else
              echo "WEBHOOK=${{ secrets.PROD_MLT_API_WEBHOOK }}" >> $GITHUB_ENV
            fi
          else
            echo "TAG=feature" >> $GITHUB_ENV
            if [ -z "${{ secrets.QUALIF_MLT_API_WEBHOOK }}" ]; then
              echo "WEBHOOK=''" >> $GITHUB_ENV
              echo "Warning: QUALIF_MLT_API_WEBHOOK secret is not set."
            else
              echo "WEBHOOK=${{ secrets.QUALIF_MLT_API_WEBHOOK }}" >> $GITHUB_ENV
            fi
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: mlt.api.Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mlt.api:${{ env.TAG }}
          
      - name: Trigger Stack Webhook
        if: ${{ env.WEBHOOK != '' }}
        run: |
          curl -X POST ${{ env.WEBHOOK }} \
          -H "Content-Type: application/json" \
          -d '{"status": "success", "tag": "${{ env.TAG }}"}'